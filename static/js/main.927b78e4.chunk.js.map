{"version":3,"sources":["Listitems.js","App.js","reportWebVitals.js","index.js"],"names":["Listitems","props","listItems","items","map","item","className","type","id","key","value","text","onChange","e","setUpdate","target","icon","onClick","deleteItem","duration","easing","library","add","faTrash","App","state","currentItem","handleInput","bind","addItem","this","setState","Date","now","preventDefault","newItem","newItems","filteredItems","filter","onSubmit","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRA0CeA,MApCf,SAAmBC,GACf,IACMC,EADQD,EAAME,MACIC,KAAI,SAAAC,GAEpB,OAAO,qBAAKC,UAAU,OAAf,SACH,8BACI,uBAAOC,KAAK,OACZC,GAAIH,EAAKI,IACTC,MAAOL,EAAKM,KACZC,SACG,SAACC,GACGZ,EAAMa,UAAUD,EAAEE,OAAOL,MAAOL,EAAKI,QAIhD,+BACI,cAAC,IAAD,CAAiBH,UAAU,SAC3BU,KAAK,QACLC,QAAS,kBAAMhB,EAAMiB,WAAWb,EAAKI,cAdXJ,EAAKI,QAsB/C,OAEG,8BACI,cAAC,IAAD,CAAUU,SAAU,IAAKC,OAAO,cAAhC,SACClB,O,eC7BZmB,IAAQC,IAAIC,K,IAsFGC,E,kDAlFb,WAAYvB,GAAO,IAAD,8BAChB,cAAMA,IACDwB,MAAM,CACTtB,MAAM,GACNuB,YAAY,CACVf,KAAK,GACLF,IAAI,KAGR,EAAKkB,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKV,WAAa,EAAKA,WAAWU,KAAhB,gBAClB,EAAKd,UAAY,EAAKA,UAAUc,KAAf,gBAZD,E,+CAelB,SAAYf,GACViB,KAAKC,SAAS,CACZL,YAAY,CACVf,KAAME,EAAEE,OAAOL,MACfD,IAAIuB,KAAKC,W,qBAKf,SAAQpB,GACNA,EAAEqB,iBACF,IAAMC,EAAUL,KAAKL,MAAMC,YAC3B,GAAkB,KAAfS,EAAQxB,KAAU,CACnB,IAAMyB,EAAS,GAAD,mBAAKN,KAAKL,MAAMtB,OAAhB,CAAuBgC,IACrCL,KAAKC,SAAS,CACZ5B,MAAMiC,EACNV,YAAY,CACVf,KAAK,GACLF,IAAI,S,wBAMZ,SAAWA,GACT,IAAM4B,EAAgBP,KAAKL,MAAMtB,MAAMmC,QAAO,SAAAjC,GAAI,OAChDA,EAAKI,MAAMA,KACXqB,KAAKC,SAAS,CACZ5B,MAAMkC,M,uBAIZ,SAAU1B,EAAMF,GACd,IAAMN,EAAQ2B,KAAKL,MAAMtB,MAC1BA,EAAMC,KAAI,SAAAC,GAEL,OAAO,qDAGLA,EAAKM,KAAKA,QAIhBmB,KAAKC,SAAS,CACZ5B,MAAOA,M,oBAKX,WACE,OACE,sBAAKG,UAAU,MAAf,UACE,iCACE,uBAAME,GAAG,aAAa+B,SAAUT,KAAKD,QAArC,UACE,uBAAOtB,KAAK,OAAOiC,YAAY,gBAC/B9B,MAAOoB,KAAKL,MAAMC,YAAYf,KAC9BC,SAAUkB,KAAKH,cACf,wBAAQpB,KAAK,SAAb,sBAGJ,cAAC,EAAD,CAAWJ,MAAS2B,KAAKL,MAAMtB,MAC/Be,WAAcY,KAAKZ,WACnBJ,UAAagB,KAAKhB,mB,GA/ER2B,IAAMC,WCGTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.927b78e4.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport './Listitems.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport FlipMove from 'react-flip-move';\r\n\r\nfunction Listitems(props){\r\n    const items = props.items;\r\n    const listItems = items.map(item =>\r\n        {\r\n            return <div className=\"list\" key={item.key}>\r\n                <p>\r\n                    <input type=\"text\" \r\n                    id={item.key} \r\n                    value={item.text}\r\n                    onChange = {\r\n                       (e) => {\r\n                           props.setUpdate(e.target.value, item.key)\r\n                       }  \r\n                    }\r\n                    />\r\n                <span>\r\n                    <FontAwesomeIcon className=\"faicon\" \r\n                    icon='trash' \r\n                    onClick={() => props.deleteItem(item.key)}\r\n                    />\r\n                </span>\r\n                </p>\r\n                \r\n            </div>\r\n        })\r\n    \r\n    return (\r\n        \r\n       <div>\r\n           <FlipMove duration={300} easing=\"ease-in-out\">\r\n           {listItems}\r\n           </FlipMove>\r\n           </div>\r\n    )\r\n}\r\n\r\nexport default Listitems;","import React from 'react';\n\nimport './App.css';\nimport Listitems from './Listitems';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faTrash);\n\nclass App extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state={\n      items:[],\n      currentItem:{\n        text:'',\n        key:''\n      }\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n  }\n\n  handleInput(e){\n    this.setState({\n      currentItem:{\n        text: e.target.value,\n        key:Date.now()\n      }\n    })\n  }\n\n  addItem(e){\n    e.preventDefault();\n    const newItem = this.state.currentItem;\n    if(newItem.text!==\"\"){\n      const newItems=[...this.state.items, newItem];\n      this.setState({\n        items:newItems,\n        currentItem:{\n          text:'',\n          key:''\n        }\n      })\n    }\n  } \n\n  deleteItem(key){\n    const filteredItems = this.state.items.filter(item => \n      item.key!==key);\n      this.setState({\n        items:filteredItems\n      })\n  }\n  \n  setUpdate(text, key){\n    const items = this.state.items;\n   items.map(item => \n    {\n        return <div>\n        if(item.key===key)\n        {\n          item.text=text\n        }\n        </div>\n    })\n    this.setState({\n      items: items\n    })\n\n  }\n  \n  render(){ \n    return (\n      <div className=\"App\">\n        <header>\n          <form id=\"to-do-form\" onSubmit={this.addItem}>\n            <input type=\"text\" placeholder=\"Enter Text...\"\n            value={this.state.currentItem.text}\n            onChange={this.handleInput}/>\n            <button type=\"submit\">Add</button>\n          </form>\n        </header>\n        <Listitems items = {this.state.items}\n        deleteItem = {this.deleteItem}\n        setUpdate = {this.setUpdate}></Listitems>\n      </div>     \n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}